import Head from 'next/head'
import Header from '@/components/Header'
import MyProjectCard from '@/components/MyProjectCard'
import { useState, useEffect } from 'react'
import Web3Modal from "web3modal";
import { ethers } from "ethers";
import { contractAddress } from "../../blockchain/config";
import JobPortal from '../../blockchain/artifacts/contracts/JobPortal.sol/JobPortal.json'
import axios from 'axios';

export default function Home() {

    // On screen load get projects count
    const [projectsData, setProjectsData] = useState([]);

    useEffect(() => {
        async function getProjects() {
            let projectsArr = [];
            const web3Modal = new Web3Modal();
            const connection = await web3Modal.connect();
            const provider = new ethers.providers.Web3Provider(connection);
            const signer = provider.getSigner();
            const jobPortal = new ethers.Contract(contractAddress, JobPortal.abi, signer);
            const cnt = await jobPortal.getCurrentProjectId();
            for (let i = 0; i <= cnt.toNumber(); i++) {
                projectsArr.push(i);
            }

            const data = await Promise.all(projectsArr.map(async (p) => {
                const project = await jobPortal.projects(p);
                // get the address of the signer
                console.log(signer)
                if (project[2] == await signer.getAddress()) {
                    const meta = await axios.get(project[0])
                    console.log(meta)
                    console.log(meta.data)
                    // convert the array to object
                    const projectObj = {
                        uri: project[0],
                        id: project[1].toNumber(),
                        manager: project[2],
                        taskCount: project[3].toNumber(),
                        title: meta.data.title,
                        skills: meta.data.skills,
                        image: meta.data.image,
                        duration: meta.data.duration,
                        description: meta.data.description,
                        category: meta.data.category
                    }
                    return projectObj;
                }
            }))
            setProjectsData(data);
            console.log(data)
        }
        getProjects();

    }, []);

    return (
        <>
            <Head>
                <title>Kaamify</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <Header />
            <section className="bg-black text-white pb-10 px-10">
                <div className="max-w-5xl mx-auto">
                    <h1 className="text-2xl font-semibold my-10 md:ml-5">My Projects</h1>
                    {projectsData.map((p, index) => (
                        p && <MyProjectCard key={index} project={p} />
                    ))}


                </div>
            </section>
        </>
    )
}
